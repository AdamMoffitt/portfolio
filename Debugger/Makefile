#############################################################################
# Makefile for building: Debugger
# Generated by qmake (2.01a) (Qt 4.8.6) on: Sat Apr 23 19:03:35 2016
# Project:  Debugger.pro
# Template: app
# Command: /usr/lib/x86_64-linux-gnu/qt4/bin/qmake -o Makefile Debugger.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/lib/x86_64-linux-gnu/qt4/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = AddStatement.cpp \
		Debugger.cpp \
		debugger_window.cpp \
		DivStatement.cpp \
		EndStatement.cpp \
		error_window.cpp \
		GOSUBStatement.cpp \
		GOTOStatement.cpp \
		IFStatement.cpp \
		LetStatement.cpp \
		llistint.cpp \
		main_window.cpp \
		MultStatement.cpp \
		PrintAllStatement.cpp \
		PrintStatement.cpp \
		ProgramState.cpp \
		ReturnStatement.cpp \
		stackint.cpp \
		SubStatement.cpp \
		values_window.cpp moc_debugger_window.cpp \
		moc_error_window.cpp \
		moc_main_window.cpp \
		moc_values_window.cpp
OBJECTS       = AddStatement.o \
		Debugger.o \
		debugger_window.o \
		DivStatement.o \
		EndStatement.o \
		error_window.o \
		GOSUBStatement.o \
		GOTOStatement.o \
		IFStatement.o \
		LetStatement.o \
		llistint.o \
		main_window.o \
		MultStatement.o \
		PrintAllStatement.o \
		PrintStatement.o \
		ProgramState.o \
		ReturnStatement.o \
		stackint.o \
		SubStatement.o \
		values_window.o \
		moc_debugger_window.o \
		moc_error_window.o \
		moc_main_window.o \
		moc_values_window.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		Debugger.pro
QMAKE_TARGET  = Debugger
DESTDIR       = 
TARGET        = Debugger

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: Debugger.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile Debugger.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_phonon.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/shared.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile Debugger.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/Debugger1.0.0 || $(MKDIR) .tmp/Debugger1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/Debugger1.0.0/ && $(COPY_FILE) --parents AddStatement.h debugger_window.h DivStatement.h EndStatement.h error_window.h GOSUBStatement.h GOTOStatement.h IFStatement.h LetStatement.h llistint.h m_sort.h main_window.h MultStatement.h PrintAllStatement.h PrintStatement.h ProgramState.h ReturnStatement.h stackint.h Statement.h SubStatement.h values_window.h .tmp/Debugger1.0.0/ && $(COPY_FILE) --parents AddStatement.cpp Debugger.cpp debugger_window.cpp DivStatement.cpp EndStatement.cpp error_window.cpp GOSUBStatement.cpp GOTOStatement.cpp IFStatement.cpp LetStatement.cpp llistint.cpp main_window.cpp MultStatement.cpp PrintAllStatement.cpp PrintStatement.cpp ProgramState.cpp ReturnStatement.cpp stackint.cpp SubStatement.cpp values_window.cpp .tmp/Debugger1.0.0/ && (cd `dirname .tmp/Debugger1.0.0` && $(TAR) Debugger1.0.0.tar Debugger1.0.0 && $(COMPRESS) Debugger1.0.0.tar) && $(MOVE) `dirname .tmp/Debugger1.0.0`/Debugger1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/Debugger1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_debugger_window.cpp moc_error_window.cpp moc_main_window.cpp moc_values_window.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_debugger_window.cpp moc_error_window.cpp moc_main_window.cpp moc_values_window.cpp
moc_debugger_window.cpp: Statement.h \
		ProgramState.h \
		stackint.h \
		llistint.h \
		LetStatement.h \
		PrintStatement.h \
		PrintAllStatement.h \
		EndStatement.h \
		AddStatement.h \
		SubStatement.h \
		MultStatement.h \
		DivStatement.h \
		GOTOStatement.h \
		IFStatement.h \
		GOSUBStatement.h \
		ReturnStatement.h \
		values_window.h \
		m_sort.h \
		error_window.h \
		debugger_window.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) debugger_window.h -o moc_debugger_window.cpp

moc_error_window.cpp: error_window.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) error_window.h -o moc_error_window.cpp

moc_main_window.cpp: debugger_window.h \
		Statement.h \
		ProgramState.h \
		stackint.h \
		llistint.h \
		LetStatement.h \
		PrintStatement.h \
		PrintAllStatement.h \
		EndStatement.h \
		AddStatement.h \
		SubStatement.h \
		MultStatement.h \
		DivStatement.h \
		GOTOStatement.h \
		IFStatement.h \
		GOSUBStatement.h \
		ReturnStatement.h \
		values_window.h \
		m_sort.h \
		error_window.h \
		main_window.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) main_window.h -o moc_main_window.cpp

moc_values_window.cpp: m_sort.h \
		ProgramState.h \
		stackint.h \
		llistint.h \
		values_window.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) values_window.h -o moc_values_window.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

AddStatement.o: AddStatement.cpp AddStatement.h \
		Statement.h \
		ProgramState.h \
		stackint.h \
		llistint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o AddStatement.o AddStatement.cpp

Debugger.o: Debugger.cpp main_window.h \
		debugger_window.h \
		Statement.h \
		ProgramState.h \
		stackint.h \
		llistint.h \
		LetStatement.h \
		PrintStatement.h \
		PrintAllStatement.h \
		EndStatement.h \
		AddStatement.h \
		SubStatement.h \
		MultStatement.h \
		DivStatement.h \
		GOTOStatement.h \
		IFStatement.h \
		GOSUBStatement.h \
		ReturnStatement.h \
		values_window.h \
		m_sort.h \
		error_window.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Debugger.o Debugger.cpp

debugger_window.o: debugger_window.cpp debugger_window.h \
		Statement.h \
		ProgramState.h \
		stackint.h \
		llistint.h \
		LetStatement.h \
		PrintStatement.h \
		PrintAllStatement.h \
		EndStatement.h \
		AddStatement.h \
		SubStatement.h \
		MultStatement.h \
		DivStatement.h \
		GOTOStatement.h \
		IFStatement.h \
		GOSUBStatement.h \
		ReturnStatement.h \
		values_window.h \
		m_sort.h \
		error_window.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debugger_window.o debugger_window.cpp

DivStatement.o: DivStatement.cpp DivStatement.h \
		Statement.h \
		ProgramState.h \
		stackint.h \
		llistint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DivStatement.o DivStatement.cpp

EndStatement.o: EndStatement.cpp EndStatement.h \
		Statement.h \
		ProgramState.h \
		stackint.h \
		llistint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o EndStatement.o EndStatement.cpp

error_window.o: error_window.cpp error_window.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o error_window.o error_window.cpp

GOSUBStatement.o: GOSUBStatement.cpp GOSUBStatement.h \
		Statement.h \
		ProgramState.h \
		stackint.h \
		llistint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GOSUBStatement.o GOSUBStatement.cpp

GOTOStatement.o: GOTOStatement.cpp GOTOStatement.h \
		Statement.h \
		ProgramState.h \
		stackint.h \
		llistint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GOTOStatement.o GOTOStatement.cpp

IFStatement.o: IFStatement.cpp IFStatement.h \
		Statement.h \
		ProgramState.h \
		stackint.h \
		llistint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o IFStatement.o IFStatement.cpp

LetStatement.o: LetStatement.cpp LetStatement.h \
		Statement.h \
		ProgramState.h \
		stackint.h \
		llistint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o LetStatement.o LetStatement.cpp

llistint.o: llistint.cpp llistint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o llistint.o llistint.cpp

main_window.o: main_window.cpp main_window.h \
		debugger_window.h \
		Statement.h \
		ProgramState.h \
		stackint.h \
		llistint.h \
		LetStatement.h \
		PrintStatement.h \
		PrintAllStatement.h \
		EndStatement.h \
		AddStatement.h \
		SubStatement.h \
		MultStatement.h \
		DivStatement.h \
		GOTOStatement.h \
		IFStatement.h \
		GOSUBStatement.h \
		ReturnStatement.h \
		values_window.h \
		m_sort.h \
		error_window.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main_window.o main_window.cpp

MultStatement.o: MultStatement.cpp MultStatement.h \
		Statement.h \
		ProgramState.h \
		stackint.h \
		llistint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o MultStatement.o MultStatement.cpp

PrintAllStatement.o: PrintAllStatement.cpp PrintAllStatement.h \
		Statement.h \
		ProgramState.h \
		stackint.h \
		llistint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o PrintAllStatement.o PrintAllStatement.cpp

PrintStatement.o: PrintStatement.cpp PrintStatement.h \
		Statement.h \
		ProgramState.h \
		stackint.h \
		llistint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o PrintStatement.o PrintStatement.cpp

ProgramState.o: ProgramState.cpp stackint.h \
		llistint.h \
		ProgramState.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ProgramState.o ProgramState.cpp

ReturnStatement.o: ReturnStatement.cpp ReturnStatement.h \
		Statement.h \
		ProgramState.h \
		stackint.h \
		llistint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ReturnStatement.o ReturnStatement.cpp

stackint.o: stackint.cpp stackint.h \
		llistint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o stackint.o stackint.cpp

SubStatement.o: SubStatement.cpp SubStatement.h \
		Statement.h \
		ProgramState.h \
		stackint.h \
		llistint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o SubStatement.o SubStatement.cpp

values_window.o: values_window.cpp values_window.h \
		m_sort.h \
		ProgramState.h \
		stackint.h \
		llistint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o values_window.o values_window.cpp

moc_debugger_window.o: moc_debugger_window.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_debugger_window.o moc_debugger_window.cpp

moc_error_window.o: moc_error_window.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_error_window.o moc_error_window.cpp

moc_main_window.o: moc_main_window.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_main_window.o moc_main_window.cpp

moc_values_window.o: moc_values_window.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_values_window.o moc_values_window.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

